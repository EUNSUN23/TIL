0105

TIL

react.rocks : 리액트프로젝트 예시를 볼 수 있다. 모두 오픈소스임. 모든 코드가 다 좋은건 아니지만. 
* 프로젝트 예시 더 보기 : 구글에 'built with react' 키워드로 검색하면 'Site using react' 깃허브 주소 뜸.
리액트 사용해서 만든 프로젝트들 예시를 볼 수 있음. 'Made with react' 사이트 참고해도 좋음. (소스코드도 
볼 수 있음)

gatsbyjs : 리액트 기반의 라이브러리. 정적(static)리액트 웹사이트를 만들 수 있게 한다. 
react-router를 쓰지 않고 폴더 structure로 되어 있다. (각 폴더 안에 index.html파일 있음).
90년대 스타일로 react사용해서 코딩할 수 있다. (내가 react사용해서 코딩하면 그걸 
html파일이 들어있는 폴더 구조로 바꿔준다)

(정적 웹사이트 : html, css, js로만 이루어진 웹사이트. 보통의 리액트 웹사이트도 정적 웹사이트지만^^)

react native : native IOS나 안드로이드 앱 개발을 위한 리액트. 자바스크립트로 코드를 짜면
코드를 컴파일 해서 앱 상에서 동작할 수 있게 한다.

Material UI : 컴포넌트 라이브러리이다. pre-built, pre-styled 컴포넌트를 제공한다. 

bootstrap react : 머티리얼ui와 마찬가지로 컴포넌트 라이브러리.


next.js : 리액트 기반의 라이브러리. 폴더 structre를 제공하고, server-side-rendering을 하게끔 한다. 

서버사이드 렌더링 : *검색엔진에  의존적인 앱에 중요하다. 
-유저가 내 웹앱으로 연결되는 url을 입력하면 서버쪽에서 해당 페이지를 pre-render해서 
pre-render된 html코드를 유저에게 보여준다. 
서버측에서 react app 을 fetch하고 render해서 

-서버사이드렌더링이 아닌 경우 : 서버측에서 index.html파일과 코드를 전송하면 내가 그걸 spa형태로
렌더링해서 브라우저상에 띄움. 하지만 비동기방식으로 데이터를 불러올경우 유저에게는 데이터가
도착할때까지 화면이 보이지 않는다. 


-구글링해서 next.js깃허브 참조할것-




 