-배운것-


**redux오래된 버전 & react 새버전 충돌(?) 에러. 

WEBPACK_IMPORTED_MODULE_0_react___default.a.createContext is not a function

-->

react-redux v6.0.0 uses the new context api provided by React and in order for it work, 
either you need to downgrade react-redux to v5.x.x or upgrade react and react-dom to v16.4 or above

If you are using yarn, you can run

yarn upgrade react react-dom

else with npm you can run

npm update react react-dom

You could also change the versions manually in package.json and run yarn install or npm install


**redux를 적용하기에 적당한 state type : when the state affect multiple components or areas of your
application.

Should every state be handled through redux? Somtimes we have to eliminate the setState call and the local component
state if we use redux. 

*local ui state (ex: showing/hiding backdrop) : no redux

*persistent state (ex: all users, posts, burger orders..) : you typically use redux but of course not for all
the data you have in your server side database because redux is just for managing the state
in your application as long as your application is alive. And always keep in mind, when the user
refreshes your page, your state is gone. So redux is not the place for the database.
But the relevant slices are managed by redux. (ex: posts you're currently displaying, 
the users you currenlty need to display..)

client state(ex: is user authenticated? /filters set by the user..) : 


** What is Middleware?

Middleware basically is a term used for functions or the code in general you hook into a process which then
gets executed as part of that process without stopping it. So we can add middleware and the action
will still reach the reducer thereafter but we can do something with that action before it reaches the reducer,
that can be simply logging something, but that will also become important later when we want to 
execute asynchronous code. 



-질문-