-배운것- 

<복습> 
PureComponent  : PureComponent 로 감싸면 props나 state가 변했는지 알아차린다. (그래서 바뀐부분만 렌더링해주나?)
		( tip : 잘게 쪼갤수록 pureComponent를 적용하기가 쉬워진다.)
 
		--> 옛 배열/객체로 새 state 만들 때에는 push 하지 않도록 조심하기. (push하면 리액트가 변화 감지 못함)

<create-react-app>

npx create-react-app my-app
cd my-app
npm start
-------------------------------------------------------------------------------------------------------

<라이프사이클>
: 컴포넌트의 생애주기 // 각 생애주기마다 동작을 넣을 수 있다.

*class의 경우*

constructor -> render -> ref설정(?) -> componentDidMount 
-> (setState/props바뀔때) render -> (shouldComponentUpdate(true))-> componentDidUpdate
-> (부모가 자식컴포넌트없앨때) -> comonentWillUnmount -> 소멸

componentDidMount : 첫 렌더링 후 실행됨. 그 후 setState 통해서 리렌더링이 일어날 때에는 실행되지 않는다. 
돔에 컴포넌트가 붙을때마다 다시 실행된다. componentWillUnmount가 제거해주기 전 까지는 계속 남아있다. (심지어 웹페이지가 닫혀도) 메모리 누수의 원인.
완료되지 않은 비동기 요청은 꼭!!!! Unmount에서 정리해줘야 한다.


/'비동기 요청' 을 많이 한다. 

-가위바위보에 필요한곳 : 이미지가 처음 렌더링 된 후 묵찌빠 순으로 움직이는 움직임도 렌더링 해줘야함. 
이 움직임을 넣는 곳이 componentDidMount. 즉 렌더링 이후의 동작을 위해 필요함. (trigger역할하는 이벤트가 따로 없을 때?)

componentDidUpdate : 리렌더링 후 실행되는것. 

componentWillUnmount : 컴포넌트가 제거되기 직전 실행됨. (부모가 자식컴포넌트 제거할때)
/'비동기 요청 정리'를 많이 한다.

- componentDidMount의 동작을 제거함. 

 
* 비동기함수 클로져문제 : 비동기함수에서, 바깥에 있는 변수를 참조하면 클로져문제가 발생한다. (비동기함수에서 
변수 호출할 때는 호출한 시점을 기준으로 불러오는게 아니라, 선언한 시점 기준으로 호출하기 때문에?)

클로져문제 막으려면
변수선언을 비동기 함수 안에 하자.

* 고차함수 (hight-order-function) : 
함수 안에 함수 넣기.

 onClickBtn = (choice) => {~}

 <button id="scissors" className="btn" onClick={() => this.onClickBtn("가위")}>

----------->>>

onClickBtn = (choice) => () => {~}

 <button id="scissors" className="btn" onClick={this.onClickBtn("가위")}>



<hooks와 useEffect>

useEffect(() => { 
  interval.current = setIntevrval(changeHand, 100);//componentDidMount, componentDidupdate 역할(1대1 대응은 아님.)
return () => { //componentWillUnmount 역할
clearInterval(interval.current);
}
}, []);

--> 두번째 인수 배열에 넣은 값(여기서는 imgCoord)들이 바뀔 때 
useEffect가 실행된다. // 안 넣어주면 가위-바위-보가 아니라 가위-바위에서 바뀌고 끝남.

함수컴포넌트는 렌더링될때마다 함수부분 전체가 다시 실행된다. 


<질문>



-질문-